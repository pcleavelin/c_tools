// --- Client Side Requests ---

// --- Document Symbols Request ---
@struct LspTextDocument: {
    uri: string,
}
@struct LspDocumentSymbolsParams: {
    @jsonRename("textDocument")
    document: LspTextDocument,
}
// --- Document Symbols Request ---

// --- Open File Request --
@struct LspTextDocumentItem: {
    uri: string,
    @jsonRename("languageId")
    language_id: string,
    version: i32,
    text: string,
}
@struct LspDidOpenTextDocumentParams: {
    @jsonRename("textDocument")
    document: LspTextDocumentItem,
}
// --- Open File Request --

// -- Initialize Request ---
@struct LspClientCapabilitiesWorkspace: {

}
@struct LspClientCapabilities: {
    workspace: @option LspClientCapabilitiesWorkspace,
}

@struct LspInitializeRequestParams: {
    capabilities: LspClientCapabilities,
    @jsonRename("rootUri")
    root_uri: @option string,
    @jsonRename("processId")
    process_id: i32,
}
// -- Initialize Request ---
// --- Client Side Requests ---

// --- Server Side Responses ---
// --- Document Symbols Response ---
@struct LspPosition: {
    line: i32,
    character: i32,
}
@struct LspRange: {
    start: LspPosition,
    end: LspPosition,
}
@struct LspLocation: {
    uri: string,
    range: LspRange,
}
@struct LspSymbolInformation: {
	name: string;
	kind: i32;
	location: LspLocation;
}
@struct LspDocumentSymbolsResponse: {
    result: @array(count) LspSymbolInformation;
}
// --- Document Symbols Response ---

// --- Diagnostics Response ---
@struct LspDiagnosticsParams: {

}
// --- Diagnostics Response ---

@struct LspServerInfo: {
    name: string,
    version: string,
}
@struct LspCapabilities: {
}
@struct LspInitializeResult: {
    capabilities: LspCapabilities,
    serverInfo: LspServerInfo,
}
@enum LspRequestResult: {
    Initialize: LspInitializeResult,
    DocumentSymbols: @array(count) LspSymbolInformation,
}

@struct LspRequestResponse: {
    id: i32,
    jsonrpc: string,
    result: LspRequestResult,
}

@enum("method") LspNotificationMethod: {
    @jsonRename("initialized")
    Initialized,

    @jsonRename("exit")
    Exit,

    @jsonRename("textDocument/didOpen")
    OpenFile: LspDidOpenTextDocumentParams,

    @jsonRename("textDocument/publishDiagnostics")
    Diagnostics: LspDiagnosticsParams,
}
@struct LspNotification: {
    jsonrpc: string,
    params: LspNotificationMethod,
}

@enum LspServerResponse: {
    RequestResponse: LspRequestResponse,
    Notification: LspNotification,
}
// --- Server Side Responses ---

@enum("method") LspRequestMethod: {
    @jsonRename("initialize")
    Initialize: LspInitializeRequestParams,

    @jsonRename("shutdown")
    Shutdown,

    @jsonRename("textDocument/didOpen")
    OpenFile: LspDidOpenTextDocumentParams,

    @jsonRename("textDocument/documentSymbol")
    GetDocumentSymbols: LspDocumentSymbolsParams,
}

@struct LspRequest: {
    id: i32,
    jsonrpc: string,
    params: LspRequestMethod,
}
